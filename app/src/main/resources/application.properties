# Basic PostgreSQL configuration for LimeDB Peer-to-Peer Nodes
# Database will be dynamically set based on node.id parameter

# PostgreSQL connection defaults
spring.datasource.username=limedb
spring.datasource.password=limedb
spring.datasource.host=localhost
spring.datasource.port=5432

# JPA Configuration
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false

# Node Configuration (peer-to-peer)
node.id=1
server.port=7001
node.peers=http://localhost:7001,http://localhost:7002,http://localhost:7003,http://localhost:7004,http://localhost:7005

# Consistent Hashing Configuration
node.routing.virtual-nodes=3
node.routing.hash-algorithm=MD5

# Metrics Configuration - Prevent URI tag overflow during load testing
management.metrics.web.client.max-uri-tags=100
management.metrics.web.server.max-uri-tags=100
management.metrics.enable.http.client.requests=false
management.metrics.enable.http.server.requests=false
management.metrics.enable.tomcat=false
management.metrics.enable.jvm=false

# File logging configuration
logging.file.name=logs/limedb-node-${server.port:7001}.log
logging.file.path=logs/
logging.logback.rollingpolicy.max-file-size=10MB
logging.logback.rollingpolicy.total-size-cap=100MB
logging.logback.rollingpolicy.max-history=30
logging.logback.rollingpolicy.clean-history-on-start=true

# Log levels for debugging
logging.level.org.limedb.node.service.NodeService=DEBUG
logging.level.org.limedb.node.routing.RoutingService=INFO
logging.level.org.springframework.web.client.RestTemplate=DEBUG
logging.pattern.console=%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n